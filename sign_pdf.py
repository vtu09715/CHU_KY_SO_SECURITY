# ==========================================
# sign_pdf.py - K√Ω s·ªë t√†i li·ªáu PDF b·∫±ng ch·ª©ng ch·ªâ t·ª± k√Ω (self-signed)
# C√° nh√¢n h√≥a b·ªüi: Vu Duc Tu
# ==========================================

from datetime import datetime
from pyhanko.sign import signers, fields
from pyhanko.stamp.text import TextStampStyle
from pyhanko.pdf_utils import images
from pyhanko.pdf_utils.text import TextBoxStyle
from pyhanko.pdf_utils.layout import SimpleBoxLayoutRule, AxisAlignment, Margins
from pyhanko.sign.general import load_cert_from_pemder, SigningError
from pyhanko_certvalidator import ValidationContext
from pyhanko.pdf_utils.incremental_writer import IncrementalPdfFileWriter
from pyhanko.sign.fields import SigFieldSpec
import os

# === üóÇÔ∏è C·∫§U H√åNH ƒê∆Ø·ªúNG D·∫™N ===
BASE_DIR = r"D:\BAITAP2"
PDF_IN = os.path.join(BASE_DIR, "pdf", "original.pdf")
PDF_OUT = os.path.join(BASE_DIR, "pdf", "signed.pdf")
KEY_FILE = os.path.join(BASE_DIR, "keys", "signer_key.pem")
CERT_FILE = os.path.join(BASE_DIR, "keys", "signer_cert.pem")
SIG_IMG = os.path.join(BASE_DIR, "anhky", "chuky.jpg")

print("==========================================")
print("üñãÔ∏è  B·∫ÆT ƒê·∫¶U QU√Å TR√åNH K√ù S·ªê T√ÄI LI·ªÜU PDF")
print("==========================================")
print("B∆∞·ªõc 1Ô∏è‚É£: Chu·∫©n b·ªã file PDF g·ªëc:", PDF_IN)

# --- üîë T·∫°o signer v√† ValidationContext ---
signer = signers.SimpleSigner.load(KEY_FILE, CERT_FILE, key_passphrase=None)
vc = ValidationContext(trust_roots=[load_cert_from_pemder(CERT_FILE)])

# --- ‚úçÔ∏è B·∫Øt ƒë·∫ßu ti·∫øn tr√¨nh k√Ω ---
try:
    with open(PDF_IN, "rb") as inf:
        # ‚öôÔ∏è Cho ph√©p hybrid xref b·∫±ng c√°ch t·∫Øt strict mode
        writer = IncrementalPdfFileWriter(inf, strict=False)

        # üü¢ X√°c ƒë·ªãnh s·ªë trang trong PDF
        try:
            pages = writer.root["/Pages"]
            num_pages = int(pages.get("/Count", 1))
        except Exception:
            num_pages = 1

        target_page = num_pages - 1
        print(f"B∆∞·ªõc 2Ô∏è‚É£: Th√™m tr∆∞·ªùng ch·ªØ k√Ω ·ªü trang {target_page + 1}...")

        # üü© Th√™m v√πng ch·ªØ k√Ω ·ªü g√≥c ph·∫£i d∆∞·ªõi
        fields.append_signature_field(
            writer,
            SigFieldSpec(
                sig_field_name="Signature_VuDucTu",
                box=(240, 50, 550, 150),
                on_page=target_page
            )
        )

        # üñºÔ∏è H√¨nh ·∫£nh ch·ªØ k√Ω tay
        background_img = images.PdfImage(SIG_IMG)

        # --- üìê B·ªë c·ª•c khung ch·ªØ k√Ω ---
        bg_layout = SimpleBoxLayoutRule(
            x_align=AxisAlignment.ALIGN_MIN,
            y_align=AxisAlignment.ALIGN_MID,
            margins=Margins(right=20)
        )
        text_layout = SimpleBoxLayoutRule(
            x_align=AxisAlignment.ALIGN_MIN,
            y_align=AxisAlignment.ALIGN_MID,
            margins=Margins(left=150)
        )
        text_style = TextBoxStyle(font_size=13)

        # üïí Th√¥ng tin ch·ªØ k√Ω hi·ªÉn th·ªã trong tem
        ngay_ky = datetime.now().strftime("%d/%m/%Y")
        stamp_text = (
            "Vu Duc Tu "
            "\nSV: DHKTCN"
            "\nMSSV: K225480106068"
            "\nSDT: 0813424299"
            "\nfrom: THAI NGUYEN"
            f"\nNg√†y k√Ω: {ngay_ky}"
        )

        # --- ü™∂ C·∫•u tr√∫c khung hi·ªÉn th·ªã ch·ªØ k√Ω ---
        stamp_style = TextStampStyle(
            stamp_text=stamp_text,
            background=background_img,
            background_layout=bg_layout,
            inner_content_layout=text_layout,
            text_box_style=text_style,
            border_width=1,
            background_opacity=1.0,
        )

        # --- üßæ Th√¥ng tin metadata c·ªßa ch·ªØ k√Ω ---
        meta = signers.PdfSignatureMetadata(
            field_name="Signature_VuDucTu",
            reason="B√†i t·∫≠p: K√Ω s·ªë PDF b·∫±ng Python - L·ªõp K58",
            location="Th√°i Nguy√™n, Vi·ªát Nam",
            md_algorithm="sha256",
        )

        # --- üßë‚Äçüíª Kh·ªüi t·∫°o signer ---
        pdf_signer = signers.PdfSigner(
            signature_meta=meta,
            signer=signer,
            stamp_style=stamp_style,
        )

        print("B∆∞·ªõc 3Ô∏è‚É£: T·∫°o PKCS#7 (messageDigest, signingTime, contentType)...")
        print("B∆∞·ªõc 4Ô∏è‚É£: Ti·∫øn h√†nh k√Ω...")

        # --- ‚ú® Ti·∫øn h√†nh k√Ω s·ªë t√†i li·ªáu ---
        with open(PDF_OUT, "wb") as outf:
            pdf_signer.sign_pdf(writer, output=outf)

        print("\n‚úÖ HO√ÄN T·∫§T K√ù S·ªê!")
        print("üìÑ File ƒë√£ l∆∞u t·∫°i:", PDF_OUT)
        print("üßæ C√≥ th·ªÉ ki·ªÉm tra ch·ªØ k√Ω b·∫±ng verify_check_vn.py")

except SigningError as e:
    print("\n‚ùå L·ªñI KHI K√ù:", e)
    print("üëâ N·∫øu PDF g·ªëc c√≥ hybrid xref, h√£y normalize l·∫°i b·∫±ng pikepdf tr∆∞·ªõc khi k√Ω.")
except Exception as e:
    print("\n‚ùå L·ªñI KH√îNG X√ÅC ƒê·ªäNH:", e)
    print("‚ö†Ô∏è Ki·ªÉm tra l·∫°i ƒë∆∞·ªùng d·∫´n file ho·∫∑c ƒë·ªãnh d·∫°ng PDF.")

print("==========================================")
print("üèÅ HO√ÄN T·∫§T QU√Å TR√åNH K√ù PDF")
print("==========================================")
